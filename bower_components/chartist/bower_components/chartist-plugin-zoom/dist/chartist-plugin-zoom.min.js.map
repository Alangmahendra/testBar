{"version":3,"file":"chartist-plugin-zoom.min.js","sources":["chartist-plugin-zoom.js"],"names":["root","factory","define","amd","returnExportsGlobal","exports","module","this","window","document","Chartist","hide","rect","attr","style","show","getRect","firstPoint","secondPoint","x","y","width","height","position","event","svg","transform","clientX","clientY","svgElement","tagName","ownerSVGElement","matrix","getScreenCTM","point","createSVGPoint","matrixTransform","inverse","project","value","axis","max","bounds","min","scale","type","base","Math","pow","baseLog","axisLength","range","val","log","defaultOptions","plugins","zoom","options","extend","chart","copyTouch","touch","p","id","identifier","ongoingTouchIndexById","idToFind","i","ongoingTouches","length","onTouchStart","touches","changedTouches","push","onTouchMove","idx","splice","preventDefault","onTouchCancel","removeTouches","onTouchEnd","zoomIn","onMouseDown","button","downPosition","onMouseUp","box","resetOnRightMouseBtn","reset","x1","chartRect","x2","y2","y1","axisX","highLow","low","high","axisY","update","data","onZoom","onMouseMove","Line","on","element","clip-path","_node","elem","defs","querySelector","fill","addEventListener"],"mappings":"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","sourcesContent":["(function (root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], function () {\n      return (root.returnExportsGlobal = factory());\n    });\n  } else if (typeof exports === 'object') {\n    // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like enviroments that support module.exports,\n    // like Node.\n    module.exports = factory();\n  } else {\n    root['Chartist.plugins.zoom'] = factory();\n  }\n}(this, function () {\n\n  /**\r\n   * Chartist.js zoom plugin.\r\n   *\r\n   */\r\n  (function (window, document, Chartist) {\r\n    'use strict';\r\n\r\n    var defaultOptions = {\r\n      // onZoom\r\n      // resetOnRightMouseBtn\r\n    };\r\n\r\n\r\n    Chartist.plugins = Chartist.plugins || {};\r\n    Chartist.plugins.zoom = function (options) {\r\n\r\n      options = Chartist.extend({}, defaultOptions, options);\r\n\r\n      return function zoom(chart) {\r\n\r\n        if (!(chart instanceof Chartist.Line)) {\r\n          return;\r\n        }\r\n\r\n        var rect, svg, axisX, axisY, chartRect;\r\n        var downPosition;\r\n        var onZoom = options.onZoom;\r\n        var ongoingTouches = [];\r\n\r\n        chart.on('draw', function (data) {\r\n          var type = data.type;\r\n          if (type === 'line' || type === 'bar' || type === 'area' || type === 'point') {\r\n            data.element.attr({\r\n              'clip-path': 'url(#zoom-mask)'\r\n            });\r\n          }\r\n        });\r\n\r\n        chart.on('created', function (data) {\r\n          axisX = data.axisX;\r\n          axisY = data.axisY;\r\n          chartRect = data.chartRect;\r\n          svg = data.svg._node;\r\n          rect = data.svg.elem('rect', {\r\n            x: 10,\r\n            y: 10,\r\n            width: 100,\r\n            height: 100,\r\n          }, 'ct-zoom-rect');\r\n          hide(rect);\r\n\r\n          var defs = data.svg.querySelector('defs') || data.svg.elem('defs');\r\n          var width = chartRect.width();\r\n          var height = chartRect.height();\r\n\r\n          defs\r\n            .elem('clipPath', {\r\n              id: 'zoom-mask'\r\n            })\r\n            .elem('rect', {\r\n              x: chartRect.x1,\r\n              y: chartRect.y2,\r\n              width: width,\r\n              height: height,\r\n              fill: 'white'\r\n            });\r\n\r\n          svg.addEventListener('mousedown', onMouseDown);\r\n          svg.addEventListener('mouseup', onMouseUp);\r\n          svg.addEventListener('mousemove', onMouseMove);\r\n          svg.addEventListener('touchstart', onTouchStart);\r\n          svg.addEventListener('touchmove', onTouchMove);\r\n          svg.addEventListener('touchend', onTouchEnd);\r\n          svg.addEventListener('touchcancel', onTouchCancel);\r\n        });\r\n\r\n        function copyTouch(touch) {\r\n          var p = position(touch, svg);\r\n          p.id = touch.identifier; \r\n          return p;\r\n        }\r\n\r\n        function ongoingTouchIndexById(idToFind) {\r\n          for (var i = 0; i < ongoingTouches.length; i++) {\r\n            var id = ongoingTouches[i].id;\r\n            if (id === idToFind) {\r\n              return i;\r\n            }\r\n          }\r\n          return -1;\r\n        }\r\n\r\n        function onTouchStart(event) {\r\n          var touches = event.changedTouches;\r\n          for (var i = 0; i < touches.length; i++) {\r\n            ongoingTouches.push(copyTouch(touches[i]));\r\n          }        \r\n\r\n          if (ongoingTouches.length > 1) {\r\n            rect.attr(getRect(ongoingTouches[0], ongoingTouches[1]));\r\n            show(rect);\r\n          }\r\n        }\r\n\r\n        function onTouchMove(event) {\r\n          var touches = event.changedTouches;        \r\n          for (var i = 0; i < touches.length; i++) {\r\n            var idx = ongoingTouchIndexById(touches[i].identifier);\r\n            ongoingTouches.splice(idx, 1, copyTouch(touches[i]));\r\n          }\r\n\r\n          if (ongoingTouches.length > 1) {\r\n            rect.attr(getRect(ongoingTouches[0], ongoingTouches[1]));\r\n            show(rect);\r\n            event.preventDefault();\r\n          }\r\n        }\r\n\r\n        function onTouchCancel(event) {\r\n          removeTouches(event.changedTouches);\r\n        }\r\n\r\n        function removeTouches(touches) {\r\n          for (var i = 0; i < touches.length; i++) {\r\n            var idx = ongoingTouchIndexById(touches[i].identifier);\r\n            if (idx >= 0) {\r\n              ongoingTouches.splice(idx, 1);\r\n            } \r\n          }\r\n        }\r\n\r\n        function onTouchEnd(event) {\r\n          if (ongoingTouches.length > 1) {\r\n            zoomIn(getRect(ongoingTouches[0], ongoingTouches[1]));\r\n          }\r\n          removeTouches(event.changedTouches);\r\n          hide(rect);\r\n        }\r\n\r\n        function onMouseDown(event) {\r\n          if (event.button === 0) {\r\n            downPosition = position(event, svg);\r\n            rect.attr(getRect(downPosition, downPosition));\r\n            show(rect);\r\n            event.preventDefault();\r\n          }\r\n        }\r\n\r\n        var reset = function () {\r\n          chart.options.axisX.highLow = null;\r\n          chart.options.axisY.highLow = null;\r\n          chart.update(chart.data, chart.options);\r\n        };\r\n\r\n        function onMouseUp(event) {\r\n          if (event.button === 0 && downPosition) {\r\n            var box = getRect(downPosition, position(event, svg));\r\n            zoomIn(box);          \r\n            downPosition = null;\r\n            hide(rect);\r\n            event.preventDefault();\r\n          }\r\n          else if (options.resetOnRightMouseBtn && event.button === 2) {\r\n            reset();\r\n            event.preventDefault();\r\n          }\r\n        }\r\n\r\n        function zoomIn(rect) {\r\n          if (rect.width > 5 && rect.height > 5) {\r\n              var x1 = rect.x - chartRect.x1;\r\n              var x2 = x1 + rect.width;\r\n              var y2 = chartRect.y1 - rect.y;\r\n              var y1 = y2 - rect.height;\r\n\r\n              chart.options.axisX.highLow = { low: project(x1, axisX), high: project(x2, axisX) };\r\n              chart.options.axisY.highLow = { low: project(y1, axisY), high: project(y2, axisY) };\r\n\r\n              chart.update(chart.data, chart.options);\r\n              onZoom && onZoom(chart, reset);\r\n            }\r\n        }\r\n\r\n        function onMouseMove(event) {\r\n          if (downPosition) {\r\n            var point = position(event, svg);\r\n            rect.attr(getRect(downPosition, point));\r\n            event.preventDefault();\r\n          }\r\n        }\r\n      };\r\n\r\n    };\r\n\r\n    function hide(rect) {\r\n      rect.attr({ style: 'display:none' });\r\n    }\r\n\r\n    function show(rect) {\r\n      rect.attr({ style: 'display:block' });\r\n    }\r\n\r\n    function getRect(firstPoint, secondPoint) {\r\n      var x = firstPoint.x;\r\n      var y = firstPoint.y;\r\n      var width = secondPoint.x - x;\r\n      var height = secondPoint.y - y;\r\n      if (width < 0) {\r\n        width = -width;\r\n        x = secondPoint.x;\r\n      }\r\n      if (height < 0) {\r\n        height = -height;\r\n        y = secondPoint.y;\r\n      }\r\n      return {\r\n        x: x,\r\n        y: y,\r\n        width: width,\r\n        height: height\r\n      };\r\n    }\r\n\r\n    function position(event, svg) {\r\n      return transform(event.clientX, event.clientY, svg);\r\n    }\r\n\r\n    function transform(x, y, svgElement) {\r\n      var svg = svgElement.tagName === 'svg' ? svgElement : svgElement.ownerSVGElement;\r\n      var matrix = svg.getScreenCTM();\r\n      var point = svg.createSVGPoint();\r\n      point.x = x;\r\n      point.y = y;\r\n      point = point.matrixTransform(matrix.inverse());\r\n      return point || { x: 0, y: 0 };\r\n    }\r\n\r\n    function project(value, axis) {\r\n      var max = axis.bounds.max;\r\n      var min = axis.bounds.min;\r\n      if (axis.scale && axis.scale.type === 'log') {\r\n        var base = axis.scale.base;\r\n        return Math.pow(base,\r\n          value * baseLog(max / min, base) / axis.axisLength) * min;\r\n      }\r\n      return (value * axis.bounds.range / axis.axisLength) + min;\r\n    }\r\n\r\n    function baseLog(val, base) {\r\n      return Math.log(val) / Math.log(base);\r\n    }\r\n\r\n  } (window, document, Chartist));\n  return Chartist.plugins.zoom;\n\n}));\n"]}